{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["marked","require","setOptions","breaks","renderer","Renderer","Output","markdown","dangerouslySetInnerHTML","__html","id","App","React","useState","text","setText","className","Container","Form","Group","controlId","Row","Label","Control","as","onChange","e","target","value","placeholder","rows","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAiDIA,EAAOC,EAAQ,IACnBD,EAAOE,WAAW,CAChBC,QAAO,IAET,IAAMC,EAAS,IAAIJ,EAAOK,SA+B1B,SAASC,EAAT,GAA4B,IAAXC,EAAU,EAAVA,SACf,OACE,qBAAKC,wBAAyB,CAACC,OAAQT,EAAOO,EAAS,CAACH,SAAUA,KAAcM,GAAG,YAMxEC,MAtCf,WACE,MAAqBC,IAAMC,SAnDZ,0pCAmDf,mBAAOC,EAAP,KAAYC,EAAZ,KAEA,OACE,qBAAKC,UAAU,MAAf,SACC,eAACC,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,UAEA,eAACA,EAAA,EAAKC,MAAN,CAAYH,UAAU,OAAOI,UAAU,sBAAvC,UACA,cAACC,EAAA,EAAD,UACC,cAACH,EAAA,EAAKI,MAAN,CAAYZ,GAAG,QAAf,SAAuB,oDAEzB,cAACW,EAAA,EAAD,UACE,cAACH,EAAA,EAAKK,QAAN,CAAcC,GAAG,WAAWd,GAAG,SAChCe,SAAU,SAACC,GAAD,OAAKX,EAAQW,EAAEC,OAAOC,QAAQC,YAAaf,EAAMgB,KAAM,GAAIF,MAAOd,WAI5E,cAACO,EAAA,EAAD,UACE,oBAAIX,GAAG,QAAP,+BAEF,cAACW,EAAA,EAAD,UACE,cAACf,EAAD,CAAQC,SAAUO,YChEViB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a3fba15e.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\nimport {Container, Form, Row} from 'react-bootstrap'\n\nconst placeholder = `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.org), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbered lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![freeCodeCamp Logo](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)\n`;\n\nlet marked=require('marked');\nmarked.setOptions({\n  breaks:true\n});\nconst renderer=new marked.Renderer();\nfunction App() {\n  const [text,setText]=React.useState(placeholder);\n  \n  return (\n    <div className=\"App\">\n     <Container>\n     <Form>\n       \n     <Form.Group className=\"mb-3\" controlId=\"FormControlTextarea\">\n     <Row>\n      <Form.Label id=\"label\"><h1>Markdown Input</h1></Form.Label>\n    </Row>\n    <Row>\n      <Form.Control as=\"textarea\" id=\"editor\"\n     onChange={(e)=>setText(e.target.value)} placeholder={text} rows={10} value={text}/>\n    </Row>\n  </Form.Group>\n     </Form>\n     <Row>\n       <h1 id=\"label\">Markdown Output</h1>\n     </Row>\n     <Row>\n       <Output markdown={text}/>\n     </Row>\n     </Container>\n     \n    </div>\n  );\n}\n\nfunction Output({markdown}){\n  return (\n    <div dangerouslySetInnerHTML={{__html: marked(markdown,{renderer: renderer}),}} id=\"preview\">\n\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}